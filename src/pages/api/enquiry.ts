// Next.js API route support: https://nextjs.org/docs/api-routes/introduction
import type { NextApiRequest, NextApiResponse } from 'next';
import nodemailer, { Transporter } from 'nodemailer';
import { google } from 'googleapis';
const OAuth2 = google.auth.OAuth2;
const Oauth2_client = new OAuth2(process.env.GMAIL_CLIENT_ID, process.env.GMAIL_CLIENT_SECRET);
Oauth2_client.setCredentials({ refresh_token: process.env.GMAIL_REFRESH_TOKEN });

const emailTransporter = nodemailer.createTransport({
    service: 'gmail',
    auth: {
        type: 'OAuth2',
        user: process.env.GMAIL_USER,
        clientId: process.env.GMAIL_CLIENT_ID,
        clientSecret: process.env.GMAIL_CLIENT_SECRET,
        refreshToken: process.env.GMAIL_REFRESH_TOKEN,
        accessToken: Oauth2_client.getAccessToken() as unknown as string,
    },
    tls: {
        rejectUnauthorized: false,
    },
});

export default function handler(req: NextApiRequest, res: NextApiResponse) {
    if (req.method === 'POST') {
        const { product, name, email, phoneNumber, comment } = JSON.parse(req.body);

        try {
            let mailOptions = {
                from: `"Darren Wong" <${process.env.GMAIL_USER}>`,
                to: 'joan10ten@gmail.com',
                subject: `Darren Wong Testing Email - ${product ? product : 'Normal Enquiry'}`,
                html: `<div>
					<p><span>Name</span>:${name}<p>
					<p><span>Email Address</span>:${email}<p>
					<p><span>Phone Number</span>:${phoneNumber}<p>
					<p><span>Comment</span>:${comment}<p>
					<p><span>Products</span>:${product ?? '-'}<p>
                    <br/>
                    <p>balik kasi susu</p>
                    <p style="font-style: italic; font-size: 14px;">This email is autogenerated by Darren Wong. Please do not reply to this email.</p>
        <br/>
				</div>`,
            };
            const t = emailTransporter.sendMail(mailOptions);
            res.status(200).json({ success: true, message: 'Email sent.' });
        } catch (error) {
            res.status(500).json({
                success: false,
                message: 'email send failed',
            });
        }
    } else {
        res.status(405).json({
            success: false,
            message: 'Method not Allowed',
        });
    }
}
